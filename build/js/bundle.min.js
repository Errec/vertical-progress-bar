function stepForward(){step<MAX_ITEMS-1&&(next.classList.add("btn--click"),toggleDisableBtn(next),bar.style.height=10*++step+"%",barBullet.style.transform="rotate("+120*step+"deg)",renderPlaceholder(),card[step].classList.add("list__item--translate"),card[step].classList.toggle("list__item--selected"),card[step-1].classList.toggle("list__item--selected"),setTimeout(function(){card[step].classList.remove("list__item--translate")},400),setTimeout(function(){card[step].style.zIndex=parseInt(window.getComputedStyle(card[step]).zIndex)+step,next.classList.remove("btn--click")},200))}function stepBack(){step>0&&(toggleDisableBtn(back),bar.style.height=10*--step+"%",barBullet.style.transform="rotate("+120*step+"deg)",back.classList.add("btn--click"),renderPlaceholder(),card[step].classList.toggle("list__item--selected"),card[step+1].classList.toggle("list__item--selected"),card[step].classList.add("list__item--translate"),setTimeout(function(){card[step].classList.remove("list__item--translate")},400),setTimeout(function(){card[step+1].style.zIndex=parseInt(window.getComputedStyle(card[step]).zIndex)-step-1,back.classList.remove("btn--click")},200))}function renderPlaceholder(){Array.prototype.forEach.call(placeholderBullet,function(e,t){t<step?e.classList.add("progress__bullet-placehoder--hide"):e.classList.remove("progress__bullet-placehoder--hide")})}function toggleDisableBtn(e){e.disabled=!0,setTimeout(function(){e.disabled=!1},THROTTLE_TIME)}var next=document.querySelector(".btns__next"),back=document.querySelector(".btns__back"),bar=document.querySelector(".progress__bar"),placeholders=document.querySelectorAll(".progress__bullet-placeholder-item"),placeholderBullet=document.querySelectorAll(".progress__bullet-placehoder"),barBullet=document.querySelector(".progress__bar-bullet"),card=document.querySelectorAll(".list__item"),MAX_ITEMS=placeholders.length,THROTTLE_TIME=400,step=0;next.addEventListener("click",_.throttle(stepForward,THROTTLE_TIME)),back.addEventListener("click",_.throttle(stepBack,THROTTLE_TIME));
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsic3RlcEZvcndhcmQiLCJzdGVwIiwiTUFYX0lURU1TIiwibmV4dCIsImNsYXNzTGlzdCIsImFkZCIsInRvZ2dsZURpc2FibGVCdG4iLCJiYXIiLCJzdHlsZSIsImhlaWdodCIsImJhckJ1bGxldCIsInRyYW5zZm9ybSIsInJlbmRlclBsYWNlaG9sZGVyIiwiY2FyZCIsInRvZ2dsZSIsInNldFRpbWVvdXQiLCJyZW1vdmUiLCJ6SW5kZXgiLCJwYXJzZUludCIsIndpbmRvdyIsImdldENvbXB1dGVkU3R5bGUiLCJzdGVwQmFjayIsImJhY2siLCJBcnJheSIsInByb3RvdHlwZSIsImZvckVhY2giLCJjYWxsIiwicGxhY2Vob2xkZXJCdWxsZXQiLCJlbGVtZW50IiwiaW5kZXgiLCJidG4iLCJkaXNhYmxlZCIsIlRIUk9UVExFX1RJTUUiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJwbGFjZWhvbGRlcnMiLCJxdWVyeVNlbGVjdG9yQWxsIiwibGVuZ3RoIiwiYWRkRXZlbnRMaXN0ZW5lciIsIl8iLCJ0aHJvdHRsZSJdLCJtYXBwaW5ncyI6IkFBZUEsU0FBQUEsY0FDQUMsS0FBQUMsVUFBQSxJQUNBQyxLQUFBQyxVQUFBQyxJQUFBLGNBQ0FDLGlCQUFBSCxNQUNBSSxJQUFBQyxNQUFBQyxPQUFBLEtBQUFSLEtBQUEsSUFDQVMsVUFBQUYsTUFBQUcsVUFBQSxVQUFBLElBQUFWLEtBQUEsT0FDQVcsb0JBRUFDLEtBQUFaLE1BQUFHLFVBQUFDLElBQUEseUJBQ0FRLEtBQUFaLE1BQUFHLFVBQUFVLE9BQUEsd0JBQ0FELEtBQUFaLEtBQUEsR0FBQUcsVUFBQVUsT0FBQSx3QkFDQUMsV0FBQSxXQUNBRixLQUFBWixNQUFBRyxVQUFBWSxPQUFBLDBCQUNBLEtBQ0FELFdBQUEsV0FDQUYsS0FBQVosTUFBQU8sTUFBQVMsT0FBQUMsU0FBQUMsT0FBQUMsaUJBQUFQLEtBQUFaLE9BQUFnQixRQUFBaEIsS0FDQUUsS0FBQUMsVUFBQVksT0FBQSxlQUNBLE1BSUEsU0FBQUssV0FDQXBCLEtBQUEsSUFDQUssaUJBQUFnQixNQUNBZixJQUFBQyxNQUFBQyxPQUFBLEtBQUFSLEtBQUEsSUFDQVMsVUFBQUYsTUFBQUcsVUFBQSxVQUFBLElBQUFWLEtBQUEsT0FDQXFCLEtBQUFsQixVQUFBQyxJQUFBLGNBQ0FPLG9CQUVBQyxLQUFBWixNQUFBRyxVQUFBVSxPQUFBLHdCQUNBRCxLQUFBWixLQUFBLEdBQUFHLFVBQUFVLE9BQUEsd0JBQ0FELEtBQUFaLE1BQUFHLFVBQUFDLElBQUEseUJBQ0FVLFdBQUEsV0FDQUYsS0FBQVosTUFBQUcsVUFBQVksT0FBQSwwQkFDQSxLQUNBRCxXQUFBLFdBQ0FGLEtBQUFaLEtBQUEsR0FBQU8sTUFBQVMsT0FBQUMsU0FBQUMsT0FBQUMsaUJBQUFQLEtBQUFaLE9BQUFnQixRQUFBaEIsS0FBQSxFQUNBcUIsS0FBQWxCLFVBQUFZLE9BQUEsZUFDQSxNQUlBLFNBQUFKLG9CQUNBVyxNQUFBQyxVQUFBQyxRQUFBQyxLQUFBQyxrQkFBQSxTQUFBQyxFQUFBQyxHQUNBQSxFQUFBNUIsS0FDQTJCLEVBQUF4QixVQUFBQyxJQUFBLHFDQUVBdUIsRUFBQXhCLFVBQUFZLE9BQUEsdUNBS0EsU0FBQVYsaUJBQUF3QixHQUNBQSxFQUFBQyxVQUFBLEVBQ0FoQixXQUFBLFdBQ0FlLEVBQUFDLFVBQUEsR0FDQUMsZUF2RUEsSUFBQTdCLEtBQUE4QixTQUFBQyxjQUFBLGVBQ0FaLEtBQUFXLFNBQUFDLGNBQUEsZUFDQTNCLElBQUEwQixTQUFBQyxjQUFBLGtCQUNBQyxhQUFBRixTQUFBRyxpQkFBQSxzQ0FDQVQsa0JBQUFNLFNBQUFHLGlCQUFBLGdDQUNBMUIsVUFBQXVCLFNBQUFDLGNBQUEseUJBQ0FyQixLQUFBb0IsU0FBQUcsaUJBQUEsZUFFQWxDLFVBQUFpQyxhQUFBRSxPQUNBTCxjQUFBLElBQ0EvQixLQUFBLEVBRUFFLEtBQUFtQyxpQkFBQSxRQUFBQyxFQUFBQyxTQUFBeEMsWUFBQWdDLGdCQUNBVixLQUFBZ0IsaUJBQUEsUUFBQUMsRUFBQUMsU0FBQW5CLFNBQUFXIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBuZXh0ICAgICAgICAgICAgICA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5idG5zX19uZXh0Jyk7XG52YXIgYmFjayAgICAgICAgICAgICAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYnRuc19fYmFjaycpO1xudmFyIGJhciAgICAgICAgICAgICAgID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2dyZXNzX19iYXInKTtcbnZhciBwbGFjZWhvbGRlcnMgICAgICA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5wcm9ncmVzc19fYnVsbGV0LXBsYWNlaG9sZGVyLWl0ZW0nKTtcbnZhciBwbGFjZWhvbGRlckJ1bGxldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5wcm9ncmVzc19fYnVsbGV0LXBsYWNlaG9kZXInKTtcbnZhciBiYXJCdWxsZXQgICAgICAgICA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9ncmVzc19fYmFyLWJ1bGxldCcpO1xudmFyIGNhcmQgICAgICAgICAgICAgID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmxpc3RfX2l0ZW0nKTtcblxudmFyIE1BWF9JVEVNUyAgICAgPSBwbGFjZWhvbGRlcnMubGVuZ3RoO1xudmFyIFRIUk9UVExFX1RJTUUgPSA0MDA7XG52YXIgc3RlcCAgICAgICAgICA9IDA7XG5cbm5leHQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBfLnRocm90dGxlKHN0ZXBGb3J3YXJkLCBUSFJPVFRMRV9USU1FKSk7XG5iYWNrLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgXy50aHJvdHRsZShzdGVwQmFjaywgVEhST1RUTEVfVElNRSkpO1xuXG5mdW5jdGlvbiBzdGVwRm9yd2FyZCgpIHtcbiAgaWYgKHN0ZXAgPCBNQVhfSVRFTVMgLSAxKSB7XG4gICAgbmV4dC5jbGFzc0xpc3QuYWRkKCdidG4tLWNsaWNrJyk7XG4gICAgdG9nZ2xlRGlzYWJsZUJ0bihuZXh0KTtcbiAgICBiYXIuc3R5bGUuaGVpZ2h0ID0gKCsrc3RlcCAqIDEwKSArICclJztcbiAgICBiYXJCdWxsZXQuc3R5bGUudHJhbnNmb3JtID0gJ3JvdGF0ZSgnICsgMTIwICogc3RlcCArICdkZWcpJztcbiAgICByZW5kZXJQbGFjZWhvbGRlcigpO1xuXG4gICAgY2FyZFtzdGVwXS5jbGFzc0xpc3QuYWRkKCdsaXN0X19pdGVtLS10cmFuc2xhdGUnKTtcbiAgICBjYXJkW3N0ZXBdLmNsYXNzTGlzdC50b2dnbGUoJ2xpc3RfX2l0ZW0tLXNlbGVjdGVkJyk7XG4gICAgY2FyZFtzdGVwIC0gMV0uY2xhc3NMaXN0LnRvZ2dsZSgnbGlzdF9faXRlbS0tc2VsZWN0ZWQnKTtcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgIGNhcmRbc3RlcF0uY2xhc3NMaXN0LnJlbW92ZSgnbGlzdF9faXRlbS0tdHJhbnNsYXRlJyk7XG4gICAgfSwgNDAwKTtcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgIGNhcmRbc3RlcF0uc3R5bGUuekluZGV4ID0gcGFyc2VJbnQod2luZG93LmdldENvbXB1dGVkU3R5bGUoY2FyZFtzdGVwXSkuekluZGV4KSArIHN0ZXA7XG4gICAgICBuZXh0LmNsYXNzTGlzdC5yZW1vdmUoJ2J0bi0tY2xpY2snKTtcbiAgICB9LCAyMDApO1xuICB9XG59XG5cbmZ1bmN0aW9uIHN0ZXBCYWNrICgpIHtcbiAgaWYgKHN0ZXAgPiAwKSB7XG4gICAgdG9nZ2xlRGlzYWJsZUJ0bihiYWNrKTtcbiAgICBiYXIuc3R5bGUuaGVpZ2h0ID0gKC0tc3RlcCAqIDEwKSArICclJztcbiAgICBiYXJCdWxsZXQuc3R5bGUudHJhbnNmb3JtID0gJ3JvdGF0ZSgnICsgMTIwICogc3RlcCArICdkZWcpJztcbiAgICBiYWNrLmNsYXNzTGlzdC5hZGQoJ2J0bi0tY2xpY2snKTtcbiAgICByZW5kZXJQbGFjZWhvbGRlcigpO1xuXG4gICAgY2FyZFtzdGVwXS5jbGFzc0xpc3QudG9nZ2xlKCdsaXN0X19pdGVtLS1zZWxlY3RlZCcpO1xuICAgIGNhcmRbc3RlcCArIDFdLmNsYXNzTGlzdC50b2dnbGUoJ2xpc3RfX2l0ZW0tLXNlbGVjdGVkJyk7XG4gICAgY2FyZFtzdGVwXS5jbGFzc0xpc3QuYWRkKCdsaXN0X19pdGVtLS10cmFuc2xhdGUnKTtcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgIGNhcmRbc3RlcF0uY2xhc3NMaXN0LnJlbW92ZSgnbGlzdF9faXRlbS0tdHJhbnNsYXRlJyk7XG4gICAgfSwgNDAwKTtcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgIGNhcmRbc3RlcCArIDFdLnN0eWxlLnpJbmRleCA9IHBhcnNlSW50KHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGNhcmRbc3RlcF0pLnpJbmRleCkgLSBzdGVwIC0gMTtcbiAgICAgIGJhY2suY2xhc3NMaXN0LnJlbW92ZSgnYnRuLS1jbGljaycpO1xuICAgIH0sIDIwMCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gcmVuZGVyUGxhY2Vob2xkZXIgKCkge1xuICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKHBsYWNlaG9sZGVyQnVsbGV0LCBmdW5jdGlvbihlbGVtZW50LCBpbmRleCkge1xuICAgIGlmIChpbmRleCA8IHN0ZXApIHtcbiAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LmFkZCgncHJvZ3Jlc3NfX2J1bGxldC1wbGFjZWhvZGVyLS1oaWRlJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgncHJvZ3Jlc3NfX2J1bGxldC1wbGFjZWhvZGVyLS1oaWRlJyk7XG4gICAgfVxuICB9KTtcbn1cblxuZnVuY3Rpb24gdG9nZ2xlRGlzYWJsZUJ0biAoYnRuKSB7XG4gIGJ0bi5kaXNhYmxlZCA9IHRydWU7XG4gIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgIGJ0bi5kaXNhYmxlZCA9IGZhbHNlO1xuICB9LCBUSFJPVFRMRV9USU1FKVxufVxuIl19
